class Math {
    public static Number PI: Pi();
    public static Number E: 2.71828182845904523536;
    public static Number Floor(Number n): RoundToInteger(n, Rounding.Down);
    public static Number Ceiling(Number n): RoundToInteger(n, Rounding.Up);
    public static Number Quotient(Number n, Number d): Floor(n/d);
    public static Number Clamp(Number n, Number min, Number max): Max(min, Min(n, max));
    public static Number IsInRange(Number n, Number min, Number max): n >= min && n <= max;
    public static Vector KinematicMotion3D(Vector startPos, Vector startVelocity, Vector acceleration, Number time):
        startPos + startVelocity*time + 0.5*acceleration*time*time;
    public static Number KinematicMotion1D(Number startPos, Number startVelocity, Number acceleration, Number time):
        startPos + startVelocity*time + 0.5*acceleration*time*time;
}
